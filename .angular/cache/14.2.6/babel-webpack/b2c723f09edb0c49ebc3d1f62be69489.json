{"ast":null,"code":"import _asyncToGenerator from \"/Users/audrian/Documents/Programming/GitHub/banking-app-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { lastValueFrom } from 'rxjs';\nimport { noNumValidator } from '../../validators/noNumValidator';\nimport { onlyNumValidator } from '../../validators/onlyNumValidator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AllCustomersComponent_tr_27_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.custFirstName);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.custLastName);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.custCity);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.custPhone);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.bankAcc == null ? null : user_r2.customer.bankAcc.accType);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r2.customer.bankAcc == null ? null : user_r2.customer.bankAcc.accBal);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.customer.bankAcc == null ? null : user_r2.customer.bankAcc.accCreationDate, \" \");\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_8_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AllCustomersComponent_tr_27_td_8_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const user_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.handleEdit(user_r2.id ? user_r2.id : 0));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r18.isUpdating ? \"Cancel\" : \"Edit\", \" \");\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_8_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AllCustomersComponent_tr_27_td_8_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const user_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.handleValidator(user_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.showConfirmDel ? \"Cancel\" : \"Delete\", \" \");\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_8_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AllCustomersComponent_tr_27_td_8_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const user_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.handleDel(user_r2.id ? user_r2.id : 0));\n    });\n    i0.ɵɵtext(1, \" Confirm \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_8_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AllCustomersComponent_tr_27_td_8_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r31.showConfirmDel = !ctx_r31.showConfirmDel);\n    });\n    i0.ɵɵtext(1, \" Cancel \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AllCustomersComponent_tr_27_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, AllCustomersComponent_tr_27_td_8_button_1_Template, 2, 1, \"button\", 9);\n    i0.ɵɵtemplate(2, AllCustomersComponent_tr_27_td_8_button_2_Template, 2, 1, \"button\", 10);\n    i0.ɵɵtemplate(3, AllCustomersComponent_tr_27_td_8_button_3_Template, 2, 0, \"button\", 9);\n    i0.ɵɵtemplate(4, AllCustomersComponent_tr_27_td_8_button_4_Template, 2, 0, \"button\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer && !ctx_r10.showConfirmDel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer && !ctx_r10.showConfirmDel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer && ctx_r10.showConfirmDel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer && ctx_r10.showConfirmDel);\n  }\n}\n\nfunction AllCustomersComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 7);\n    i0.ɵɵtemplate(1, AllCustomersComponent_tr_27_td_1_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(2, AllCustomersComponent_tr_27_td_2_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(3, AllCustomersComponent_tr_27_td_3_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(4, AllCustomersComponent_tr_27_td_4_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(5, AllCustomersComponent_tr_27_td_5_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(6, AllCustomersComponent_tr_27_td_6_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(7, AllCustomersComponent_tr_27_td_7_Template, 2, 1, \"td\", 8);\n    i0.ɵɵtemplate(8, AllCustomersComponent_tr_27_td_8_Template, 5, 4, \"td\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", user_r2.customer);\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"First name cannot be left blank\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"First name cannot contain numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Last name cannot be left blank\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Last name cannot contain numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"City cannot be left blank\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"City cannot contain numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Phone number cannot be left blank\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Phone number can contain only numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Phone number can only contain 8 numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const accType_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", accType_r45);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", accType_r45, \" \");\n  }\n}\n\nfunction AllCustomersComponent_div_28_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"p\", 40);\n    i0.ɵɵtext(2, \"Account balance can contain only numbers\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AllCustomersComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"h5\", 15);\n    i0.ɵɵtext(3, \" Customer Details \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 16)(5, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function AllCustomersComponent_div_28_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.onSubmit());\n    });\n    i0.ɵɵelementStart(6, \"div\", 18)(7, \"label\", 19);\n    i0.ɵɵtext(8, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 21);\n    i0.ɵɵtemplate(11, AllCustomersComponent_div_28_div_11_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(12, AllCustomersComponent_div_28_div_12_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 18)(14, \"label\", 23);\n    i0.ɵɵtext(15, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 21);\n    i0.ɵɵtemplate(18, AllCustomersComponent_div_28_div_18_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(19, AllCustomersComponent_div_28_div_19_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 18)(21, \"label\", 25);\n    i0.ɵɵtext(22, \"City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 21);\n    i0.ɵɵtemplate(25, AllCustomersComponent_div_28_div_25_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(26, AllCustomersComponent_div_28_div_26_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 18)(28, \"label\", 27);\n    i0.ɵɵtext(29, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 28)(31, \"span\", 29);\n    i0.ɵɵtext(32, \"+65\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"input\", 30);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"div\", 21);\n    i0.ɵɵtemplate(35, AllCustomersComponent_div_28_div_35_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(36, AllCustomersComponent_div_28_div_36_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(37, AllCustomersComponent_div_28_div_37_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"div\", 31);\n    i0.ɵɵelement(39, \"hr\");\n    i0.ɵɵelementStart(40, \"label\", 32);\n    i0.ɵɵtext(41, \"Account Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"select\", 33);\n    i0.ɵɵlistener(\"change\", function AllCustomersComponent_div_28_Template_select_change_42_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.update($event));\n    });\n    i0.ɵɵelementStart(43, \"option\", 34);\n    i0.ɵɵtext(44, \"---Select option---\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(45, AllCustomersComponent_div_28_option_45_Template, 2, 2, \"option\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"label\", 36);\n    i0.ɵɵtext(47, \"Account Balance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(48, \"input\", 37);\n    i0.ɵɵtemplate(49, AllCustomersComponent_div_28_div_49_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(50, \"button\", 38);\n    i0.ɵɵtext(51, \" Submit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AllCustomersComponent_div_28_Template_button_click_52_listener() {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.handleCancel());\n    });\n    i0.ɵɵtext(53, \"Cancel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.customerForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custFirstName.errors == null ? null : ctx_r1.custFirstName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custFirstName.errors == null ? null : ctx_r1.custFirstName.errors[\"noNumValidator\"]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custLastName.errors == null ? null : ctx_r1.custLastName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custLastName.errors == null ? null : ctx_r1.custLastName.errors[\"noNumValidator\"]);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custCity.errors == null ? null : ctx_r1.custCity.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custCity.hasError(\"noNumValidator\"));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custPhone.errors == null ? null : ctx_r1.custPhone.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custPhone.errors == null ? null : ctx_r1.custPhone.errors[\"onlyNumValidator\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.custPhone.errors == null ? null : ctx_r1.custPhone.errors[\"maxlength\"]);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.bankAccTypes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.accBal.errors == null ? null : ctx_r1.accBal.errors[\"onlyNumValidator\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.customerForm.invalid);\n  }\n}\n\nexport class AllCustomersComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.bankAccTypes = ['Savings', 'Current', 'Overseas'];\n    this.listOfUser = [];\n    this.isUpdating = false;\n    this.showConfirmDel = false;\n    this.offer = {\n      offerId: null,\n      offerName: null,\n      custId: null,\n      annualFee: null,\n      interestFreeCashWithdrawal: null,\n      interestRatePercent: null,\n      loanAmnt: null,\n      preclosureCharges: null\n    };\n    this.bankAcc = {\n      accId: null,\n      accType: '',\n      accBal: 0,\n      accCreationDate: ''\n    };\n    this.customer = {\n      custId: null,\n      custFirstName: '',\n      custLastName: '',\n      custCity: '',\n      custPhone: '',\n      bankAcc: this.bankAcc,\n      offers: []\n    };\n    this.user = {\n      id: null,\n      name: '',\n      username: '',\n      password: '',\n      customer: this.customer,\n      roles: []\n    }; // fillListOfOffers() {\n    //   for (let i = 0; i < this.listOfUser.length; i++) {\n    //     this.listOfOffers = !!this.listOfUser[i].customer?.offers ? this.listOfUser[i].customer!.offers : [];\n    // if (!!temp) {\n    //   for (let y = 0; y < temp!.length; y++) {\n    //     this.listOfOffers.push(temp[y]);\n    //   }\n    //   console.log('list of offers please ' + this.listOfOffers);\n    // }\n    //   }\n    // }\n\n    this.customerForm = new FormGroup({\n      custFirstName: new FormControl('', [Validators.required, noNumValidator()]),\n      custLastName: new FormControl('', [Validators.required, noNumValidator()]),\n      custCity: new FormControl('', [Validators.required, noNumValidator()]),\n      custPhone: new FormControl('', [Validators.required, onlyNumValidator(), Validators.maxLength(8)]),\n      bankAccForm: new FormGroup({\n        accType: new FormControl('Savings'),\n        accBal: new FormControl('', [onlyNumValidator()])\n      })\n    });\n  }\n\n  update(e) {\n    this.customerForm.controls.bankAccForm.controls.accType.setValue(e.target.value);\n  }\n\n  ngOnInit() {\n    this.getAllUsers(); // this.fillListOfOffers();\n  }\n\n  getAllUsers() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.listOfUser = yield lastValueFrom(_this.apiService.allUsers());\n      console.log(_this.listOfUser); // console.log(this.listOfCustomer)\n      // var date = new Date(\"2022-10-19 17:37:54:388\")\n      // console.log(date.getTime())\n    })();\n  }\n\n  get custFirstName() {\n    return this.customerForm.controls.custFirstName;\n  }\n\n  get custLastName() {\n    return this.customerForm.controls.custLastName;\n  }\n\n  get custCity() {\n    return this.customerForm.controls.custCity;\n  }\n\n  get custPhone() {\n    return this.customerForm.controls.custPhone;\n  }\n\n  get accBal() {\n    return this.customerForm.controls.bankAccForm.controls.accBal;\n  }\n\n  onSubmit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      // console.log(this.user.customer?.custPhone)\n      const rawValue = _this2.customerForm.getRawValue();\n\n      console.log(\"ACCOUNT TYPE \" + rawValue.bankAccForm.accType);\n      _this2.user.customer.custFirstName = rawValue.custFirstName;\n      _this2.user.customer.custLastName = rawValue.custLastName;\n      _this2.user.customer.custCity = rawValue.custCity;\n      _this2.user.customer.custPhone = rawValue.custPhone;\n      _this2.user.customer.bankAcc.accType = rawValue.bankAccForm.accType;\n      _this2.user.customer.bankAcc.accBal = parseFloat(!!rawValue.bankAccForm.accBal ? rawValue.bankAccForm.accBal : '');\n      yield lastValueFrom(_this2.apiService.saveUpdatedUser(_this2.user));\n\n      _this2.getAllUsers();\n\n      _this2.isUpdating = !_this2.isUpdating;\n\n      _this2.customerForm.reset();\n    })();\n  }\n\n  handleCancel() {\n    this.bankAcc = {\n      accId: null,\n      accType: '',\n      accBal: 0,\n      accCreationDate: ''\n    };\n    this.customer = {\n      custId: null,\n      custFirstName: '',\n      custLastName: '',\n      custCity: '',\n      custPhone: '',\n      bankAcc: this.bankAcc\n    };\n    this.user = {\n      id: null,\n      name: '',\n      username: '',\n      password: '',\n      customer: this.customer,\n      roles: []\n    };\n    this.isUpdating = !this.isUpdating;\n  }\n\n  handleEdit(id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.isUpdating = !_this3.isUpdating;\n      _this3.user = yield lastValueFrom(_this3.apiService.getUserById(id));\n      console.log(_this3.user);\n\n      _this3.customerForm.setValue({\n        custFirstName: !!_this3.user.customer?.custFirstName ? _this3.user.customer?.custFirstName : '',\n        custLastName: !!_this3.user.customer?.custLastName ? _this3.user.customer?.custLastName : '',\n        custCity: !!_this3.user.customer?.custCity ? _this3.user.customer?.custCity : '',\n        custPhone: !!_this3.user.customer?.custPhone ? _this3.user.customer?.custPhone : '',\n        bankAccForm: {\n          accType: !!_this3.user.customer?.bankAcc?.accType ? _this3.user.customer?.bankAcc?.accType : _this3.customerForm.controls.bankAccForm.controls.accType.value,\n          accBal: !!_this3.user.customer?.bankAcc?.accBal ? _this3.user.customer?.bankAcc?.accBal?.toString() : ''\n        }\n      });\n    })();\n  }\n\n  handleDel(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (id !== 0) {\n        yield lastValueFrom(_this4.apiService.deleteUserById(id));\n\n        _this4.getAllUsers();\n\n        _this4.showConfirmDel = !_this4.showConfirmDel;\n      }\n    })();\n  }\n\n  handleValidator(user) {\n    let tempBal = user.customer.bankAcc.accBal ? user.customer.bankAcc.accBal : 0;\n\n    if (tempBal > 10000) {\n      this.showConfirmDel = !this.showConfirmDel;\n    } else {\n      window.alert(\"Account canont be deleted since it has less than $10000\");\n    }\n  }\n\n}\n\nAllCustomersComponent.ɵfac = function AllCustomersComponent_Factory(t) {\n  return new (t || AllCustomersComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n\nAllCustomersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AllCustomersComponent,\n  selectors: [[\"app-all-customers\"]],\n  decls: 29,\n  vars: 2,\n  consts: [[1, \"d-flex\", \"flex-column\"], [1, \"ms-4\"], [1, \"p-4\", \"table-responsive\"], [1, \"table\", \"table-bordered\", \"table-striped\", \"table-hover\", \"align-middle\"], [1, \"align-middle\", \"text-center\"], [\"class\", \"text-center\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [1, \"text-center\"], [4, \"ngIf\"], [\"class\", \"me-2 rounded-pill\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"rounded-pill\", 3, \"click\", 4, \"ngIf\"], [1, \"me-2\", \"rounded-pill\", 3, \"click\"], [1, \"rounded-pill\", 3, \"click\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"d-flex\", \"flex-column\", \"shadow\", 2, \"border-bottom-left-radius\", \"16px\", \"border-bottom-right-radius\", \"16px\"], [1, \"bg\", \"bg-dark\", \"text-white\", \"text-center\", \"mb-0\", \"py-2\", 2, \"border-top-left-radius\", \"16px\", \"border-top-right-radius\", \"16px\"], [1, \"d-flex\", \"border\", \"px-5\", \"py-2\", \"justify-content-center\", 2, \"border-bottom-left-radius\", \"16px\", \"border-bottom-right-radius\", \"16px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"\"], [\"for\", \"custFirstName\", 1, \"form-label\"], [\"formControlName\", \"custFirstName\", \"type\", \"text\", \"name\", \"custFirstName\", 1, \"form-control\"], [1, \"d-flex\", \"m-2\"], [\"class\", \"alert alert-danger p-1\", 4, \"ngIf\"], [\"for\", \"custLastName\", 1, \"form-label\"], [\"formControlName\", \"custLastName\", \"type\", \"text\", \"name\", \"custLastName\", 1, \"form-control\"], [\"for\", \"custCity\", 1, \"form-label\"], [\"formControlName\", \"custCity\", \"type\", \"text\", \"name\", \"custCity\", 1, \"form-control\"], [\"for\", \"custPhone\", 1, \"form-label\"], [1, \"input-group\"], [\"id\", \"inputGroupPrepend\", 1, \"input-group-text\"], [\"formControlName\", \"custPhone\", \"type\", \"text\", \"name\", \"custPhone\", \"aria-describedby\", \"inputGroupPrepend\", 1, \"form-control\"], [\"formGroupName\", \"bankAccForm\", 1, \"d-flex\", \"flex-column\"], [\"for\", \"accType\", 1, \"form-label\"], [\"name\", \"bankAccType\", 3, \"change\"], [\"disabled\", \"\", \"value\", \"default\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"accBal\", 1, \"form-label\"], [\"formControlName\", \"accBal\", \"type\", \"text\", \"name\", \"accBal\", 1, \"form-control\", \"mb-2\"], [1, \"rounded-pill\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\", \"p-1\"], [1, \"m-0\"], [3, \"value\"]],\n  template: function AllCustomersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h6\", 1)(2, \"i\");\n      i0.ɵɵtext(3, \"Usernames are \\\"firstName\\\" + \\\"-user\\\" (would join firstName + lastName)\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"h6\", 1)(5, \"i\");\n      i0.ɵɵtext(6, \"Passwords are \\\"Aa@123\\\"\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"table\", 3)(9, \"thead\")(10, \"tr\", 4)(11, \"th\");\n      i0.ɵɵtext(12, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"City\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Account Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Account Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Account Created\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"tbody\");\n      i0.ɵɵtemplate(27, AllCustomersComponent_tr_27_Template, 9, 8, \"tr\", 5);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(28, AllCustomersComponent_div_28_Template, 54, 13, \"div\", 6);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(27);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listOfUser);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUpdating);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGwtY3VzdG9tZXJzLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","lastValueFrom","noNumValidator","onlyNumValidator","i0","AllCustomersComponent","constructor","apiService","offerId","offerName","custId","annualFee","interestFreeCashWithdrawal","interestRatePercent","loanAmnt","preclosureCharges","accId","accType","accBal","accCreationDate","custFirstName","custLastName","custCity","custPhone","bankAcc","offers","id","name","username","password","customer","roles","required","maxLength","bankAccForm","update","e","customerForm","controls","setValue","target","value","ngOnInit","getAllUsers","listOfUser","allUsers","console","log","onSubmit","rawValue","getRawValue","user","parseFloat","saveUpdatedUser","isUpdating","reset","handleCancel","handleEdit","getUserById","toString","handleDel","deleteUserById","showConfirmDel","handleValidator","tempBal","window","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/audrian/Documents/Programming/GitHub/banking-app-angular/src/app/pages/all-customers/all-customers.component.ts","/Users/audrian/Documents/Programming/GitHub/banking-app-angular/src/app/pages/all-customers/all-customers.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { lastValueFrom } from 'rxjs';\nimport { noNumValidator } from '../../validators/noNumValidator';\nimport { onlyNumValidator } from '../../validators/onlyNumValidator';\nimport { BankAccount } from '../../models/bank-account';\nimport { Customer } from '../../models/customer';\nimport { Offer } from '../../models/offer';\nimport { User } from '../../models/user';\nimport { ApiService } from '../../service/api.service';\nimport { lessThanTenThousand } from 'src/app/validators/lessThanTenThousand';\n\n@Component({\n  selector: 'app-all-customers',\n  templateUrl: './all-customers.component.html',\n  styleUrls: ['./all-customers.component.css'],\n})\nexport class AllCustomersComponent implements OnInit {\n  bankAccTypes: string[] = ['Savings', 'Current', 'Overseas'];\n\n  update(e: any) {\n    this.customerForm.controls.bankAccForm.controls.accType.setValue(\n      e.target.value\n    );\n  }\n\n  listOfUser: User[] = [];\n  listOfOffers?: Offer[] \n  isUpdating: boolean = false;\n  showConfirmDel: boolean = false;\n\n  offer: Offer = {\n    offerId: null,\n    offerName: null,\n    custId: null,\n    annualFee: null,\n    interestFreeCashWithdrawal: null,\n    interestRatePercent: null,\n    loanAmnt: null,\n    preclosureCharges: null,\n  };\n\n  bankAcc: BankAccount = {\n    accId: null,\n    accType: '',\n    accBal: 0,\n    accCreationDate: '',\n  };\n\n  customer: Customer = {\n    custId: null,\n    custFirstName: '',\n    custLastName: '',\n    custCity: '',\n    custPhone: '',\n    bankAcc: this.bankAcc,\n    offers: [],\n  };\n\n  user: User = {\n    id: null,\n    name: '',\n    username: '',\n    password: '',\n    customer: this.customer,\n    roles: [],\n  };\n\n  accBalTemp?: number\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.getAllUsers();\n\n    // this.fillListOfOffers();\n  }\n\n  async getAllUsers() {\n    this.listOfUser = await lastValueFrom(\n      this.apiService.allUsers()\n    ) as User[];\n    console.log(this.listOfUser);\n\n    // console.log(this.listOfCustomer)\n    // var date = new Date(\"2022-10-19 17:37:54:388\")\n    // console.log(date.getTime())\n  }\n\n  // fillListOfOffers() {\n  //   for (let i = 0; i < this.listOfUser.length; i++) {\n  //     this.listOfOffers = !!this.listOfUser[i].customer?.offers ? this.listOfUser[i].customer!.offers : [];\n      // if (!!temp) {\n      //   for (let y = 0; y < temp!.length; y++) {\n      //     this.listOfOffers.push(temp[y]);\n      //   }\n      //   console.log('list of offers please ' + this.listOfOffers);\n      // }\n  //   }\n  // }\n\n  customerForm = new FormGroup({\n    custFirstName: new FormControl('', [Validators.required, noNumValidator()]),\n    custLastName: new FormControl('', [Validators.required, noNumValidator()]),\n    custCity: new FormControl('', [Validators.required, noNumValidator()]),\n    custPhone: new FormControl('', [\n      Validators.required,\n      onlyNumValidator(),\n      Validators.maxLength(8),\n    ]),\n    bankAccForm: new FormGroup({\n      accType: new FormControl('Savings'),\n      accBal: new FormControl('', [onlyNumValidator()]),\n    }),\n  });\n\n  get custFirstName() {\n    return this.customerForm.controls.custFirstName;\n  }\n\n  get custLastName() {\n    return this.customerForm.controls.custLastName;\n  }\n\n  get custCity() {\n    return this.customerForm.controls.custCity;\n  }\n\n  get custPhone() {\n    return this.customerForm.controls.custPhone;\n  }\n\n  get accBal() {\n    return this.customerForm.controls.bankAccForm.controls.accBal;\n  }\n\n  async onSubmit() {\n    // console.log(this.user.customer?.custPhone)\n    const rawValue = this.customerForm.getRawValue();\n    console.log(\"ACCOUNT TYPE \" + rawValue.bankAccForm.accType)\n    this.user.customer!.custFirstName = rawValue.custFirstName;\n    this.user.customer!.custLastName = rawValue.custLastName;\n    this.user.customer!.custCity = rawValue.custCity;\n    this.user.customer!.custPhone = rawValue.custPhone;\n    this.user.customer!.bankAcc!.accType = rawValue.bankAccForm.accType;\n    this.user.customer!.bankAcc!.accBal = parseFloat(\n      !!rawValue.bankAccForm.accBal ? rawValue.bankAccForm.accBal : ''\n    );\n    await lastValueFrom(this.apiService.saveUpdatedUser(this.user));\n    this.getAllUsers();\n    this.isUpdating = !this.isUpdating;\n    this.customerForm.reset();\n  }\n\n  handleCancel() {\n    this.bankAcc = {\n      accId: null,\n      accType: '',\n      accBal: 0,\n      accCreationDate: '',\n    };\n\n    this.customer = {\n      custId: null,\n      custFirstName: '',\n      custLastName: '',\n      custCity: '',\n      custPhone: '',\n      bankAcc: this.bankAcc,\n    };\n\n    this.user = {\n      id: null,\n      name: '',\n      username: '',\n      password: '',\n      customer: this.customer,\n      roles: [],\n    };\n    this.isUpdating = !this.isUpdating;\n  }\n\n  async handleEdit(id: number) {\n    this.isUpdating = !this.isUpdating;\n    this.user = (await lastValueFrom(this.apiService.getUserById(id))) as User;\n    console.log(this.user);\n    this.customerForm.setValue({\n      custFirstName: !!this.user.customer?.custFirstName\n        ? this.user.customer?.custFirstName\n        : '',\n      custLastName: !!this.user.customer?.custLastName\n        ? this.user.customer?.custLastName\n        : '',\n      custCity: !!this.user.customer?.custCity\n        ? this.user.customer?.custCity\n        : '',\n      custPhone: !!this.user.customer?.custPhone\n        ? this.user.customer?.custPhone\n        : '',\n      bankAccForm: {\n        accType: !!this.user.customer?.bankAcc?.accType\n          ? this.user.customer?.bankAcc?.accType\n          : this.customerForm.controls.bankAccForm.controls.accType.value,\n        accBal: !!this.user.customer?.bankAcc?.accBal\n          ? this.user.customer?.bankAcc?.accBal?.toString()\n          : '',\n      },\n    });\n  }\n\n  async handleDel(id: number) {\n    if (id !== 0) {\n      await lastValueFrom(this.apiService.deleteUserById(id));\n      this.getAllUsers();\n      this.showConfirmDel = !this.showConfirmDel;\n    }\n  }\n\n  handleValidator(user: User) {\n    let tempBal = user.customer!.bankAcc!.accBal ? user.customer!.bankAcc!.accBal : 0\n    if(tempBal > 10000) {\n      this.showConfirmDel = !this.showConfirmDel;\n    } else {\n      window.alert(\"Account canont be deleted since it has less than $10000\")\n    }\n  }\n}\n","<div class=\"d-flex flex-column\">\n  <h6 class=\"ms-4\">\n    <i>Usernames are \"firstName\" + \"-user\" (would join firstName + lastName)</i>\n  </h6>\n  <h6 class=\"ms-4\"><i>Passwords are \"Aa@123\"</i></h6>\n  <!-- <table> -->\n    <div class=\"p-4 table-responsive\">\n      <table\n        class=\"table table-bordered table-striped table-hover align-middle\"\n      >\n        <thead>\n          <tr class=\"align-middle text-center\">\n            <!-- <th>Index</th> -->\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>City</th>\n            <th>Phone Number</th>\n            <th>Account Type</th>\n            <th>Account Balance</th>\n            <th>Account Created</th>\n            <th></th>\n            <!-- <th> -->\n\n            <!-- <div class=\"d-flex flex-row flex-wrap justify-content-center align-items-start\"> -->\n            <!-- <button class=\"btn btn-info m-1\" style=\"border-radius: 20px\" (click)=\"handleSeedData()\">Seed</button>\n                      <button class=\"btn btn-dark m-1\" style=\"border-radius: 20px\" (click)=\"handleDeleteAll()\">Delete All</button> -->\n            <!-- </div> -->\n            <!-- </th> -->\n          </tr>\n        </thead>\n        <tbody>\n          <!-- *ngIf=\"!!user.customer\" -->\n          <tr *ngFor=\"let user of listOfUser\" class=\"text-center\">\n            <!-- <td *ngIf=\"user.customer\">{{ i }}</td> -->\n            <td *ngIf=\"user.customer\">{{ user.customer.custFirstName }}</td>\n            <td *ngIf=\"user.customer\">{{ user.customer.custLastName }}</td>\n            <td *ngIf=\"user.customer\">{{ user.customer.custCity }}</td>\n            <td *ngIf=\"user.customer\">{{ user.customer.custPhone }}</td>\n            <td *ngIf=\"user.customer\">{{ user.customer.bankAcc?.accType }}</td>\n            <td *ngIf=\"user.customer\">{{ user.customer.bankAcc?.accBal }}</td>\n            <td *ngIf=\"user.customer\">\n              {{ user.customer.bankAcc?.accCreationDate }}\n            </td>\n            <td *ngIf=\"user.customer\">\n\n\n                <button\n                *ngIf=\"user.customer && !showConfirmDel\"\n                class=\"me-2 rounded-pill\"\n                (click)=\"handleEdit(user.id ? user.id : 0)\"\n                >\n                {{ isUpdating ? \"Cancel\" : \"Edit\" }}\n              </button>\n              \n              <button\n                *ngIf=\"user.customer && !showConfirmDel \"\n                class=\"rounded-pill\"\n                (click)=\"handleValidator(user)\"\n                >\n                <!-- (click)=\"showConfirmDel = !showConfirmDel\" -->\n                {{ showConfirmDel ? \"Cancel\" : \"Delete\" }}\n              </button>\n\n              <button\n                *ngIf=\"user.customer && showConfirmDel\"\n                (click)=\"handleDel(user.id ? user.id : 0)\"\n                class=\"me-2 rounded-pill\"\n              >\n                Confirm\n              </button>\n              <button\n                *ngIf=\"user.customer && showConfirmDel\"\n                (click)=\"showConfirmDel = !showConfirmDel\"\n                class=\"rounded-pill\"\n              >\n                Cancel\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  <!-- </table> -->\n</div>\n\n<!-- <div\n  *ngIf=\"showConfirmDel\"\n  class=\"d-flex flex-column border p-2 w-25 align-items-center shadow\"\n>\n  <h4>Confirm delete?</h4>\n  <div class=\"d-flex flex-row\"></div>\n</div> -->\n\n<div *ngIf=\"isUpdating\" class=\"d-flex justify-content-center\">\n  <div\n    class=\"d-flex flex-column shadow\"\n    style=\"border-bottom-left-radius: 16px; border-bottom-right-radius: 16px\"\n  >\n    <h5\n      class=\"bg bg-dark text-white text-center mb-0 py-2\"\n      style=\"border-top-left-radius: 16px; border-top-right-radius: 16px\"\n    >\n      Customer Details\n    </h5>\n    <div\n      class=\"d-flex border px-5 py-2 justify-content-center\"\n      style=\"border-bottom-left-radius: 16px; border-bottom-right-radius: 16px\"\n    >\n      <form [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"\">\n\n          <!-- <div *ngIf=\"accBal.hasError('lessThanTenThousand')\" class=\"alert alert-danger p-1\">\n            <p class=\"m-0\">Account cannot have less than $10000</p>\n          </div> -->\n\n          <label class=\"form-label\" for=\"custFirstName\">First Name</label>\n          <input\n            formControlName=\"custFirstName\"\n            type=\"text\"\n            name=\"custFirstName\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"d-flex m-2\">\n          <div\n            *ngIf=\"custFirstName.errors?.['required']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">First name cannot be left blank</p>\n          </div>\n          <div\n            *ngIf=\"custFirstName.errors?.['noNumValidator']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">First name cannot contain numbers</p>\n          </div>\n        </div>\n\n        <div class=\"\">\n          <label class=\"form-label\" for=\"custLastName\">Last Name</label>\n          <input\n            formControlName=\"custLastName\"\n            type=\"text\"\n            name=\"custLastName\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"d-flex m-2\">\n          <div\n            *ngIf=\"custLastName.errors?.['required']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Last name cannot be left blank</p>\n          </div>\n          <div\n            *ngIf=\"custLastName.errors?.['noNumValidator']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Last name cannot contain numbers</p>\n          </div>\n        </div>\n\n        <div class=\"\">\n          <label class=\"form-label\" for=\"custCity\">City</label>\n          <input\n            formControlName=\"custCity\"\n            type=\"text\"\n            name=\"custCity\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"d-flex m-2\">\n          <div\n            *ngIf=\"custCity.errors?.['required']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">City cannot be left blank</p>\n          </div>\n          <div\n            *ngIf=\"custCity.hasError('noNumValidator')\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">City cannot contain numbers</p>\n          </div>\n        </div>\n\n        <div class=\"\">\n          <label class=\"form-label\" for=\"custPhone\">Phone Number</label>\n          <div class=\"input-group\">\n            <span class=\"input-group-text\" id=\"inputGroupPrepend\">+65</span>\n            <input\n              formControlName=\"custPhone\"\n              type=\"text\"\n              name=\"custPhone\"\n              class=\"form-control\"\n              aria-describedby=\"inputGroupPrepend\"\n            />\n          </div>\n        </div>\n        <div class=\"d-flex m-2\">\n          <div\n            *ngIf=\"custPhone.errors?.['required']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Phone number cannot be left blank</p>\n          </div>\n          <div\n            *ngIf=\"custPhone.errors?.['onlyNumValidator']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Phone number can contain only numbers</p>\n          </div>\n          <div\n            *ngIf=\"custPhone.errors?.['maxlength']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Phone number can only contain 8 numbers</p>\n          </div>\n        </div>\n\n        <div formGroupName=\"bankAccForm\" class=\"d-flex flex-column\">\n          <hr />\n          <!-- <h5 class=\"text-center\">Bank Account Details</h5> -->\n          <label class=\"form-label\" for=\"accType\">Account Type</label>\n          <!-- <input\n            formControlName=\"accType\"\n            type=\"text\"\n            name=\"accType\"\n            class=\"form-control\"\n          /> -->\n          <select name=\"bankAccType\" (change)=\"update($event)\">\n            <option disabled value=\"default\">---Select option---</option>\n            <option *ngFor=\"let accType of bankAccTypes\" [value]=\"accType\">\n              {{ accType }}\n            </option>\n          </select>\n\n          <label class=\"form-label\" for=\"accBal\">Account Balance</label>\n          <input\n            formControlName=\"accBal\"\n            type=\"text\"\n            name=\"accBal\"\n            class=\"form-control mb-2\"\n          />\n          <div\n            *ngIf=\"accBal.errors?.['onlyNumValidator']\"\n            class=\"alert alert-danger p-1\"\n          >\n            <p class=\"m-0\">Account balance can contain only numbers</p>\n          </div>\n        </div>\n\n        <button class=\"rounded-pill\" [disabled]=\"customerForm.invalid\">\n          Submit\n        </button>\n        <button (click)=\"handleCancel()\" class=\"rounded-pill\">Cancel</button>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}