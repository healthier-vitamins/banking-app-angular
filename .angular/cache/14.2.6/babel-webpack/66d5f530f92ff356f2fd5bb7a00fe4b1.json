{"ast":null,"code":"import _asyncToGenerator from \"/Users/audrian/Documents/Programming/GitHub/banking-app-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { lastValueFrom } from 'rxjs';\nimport { User } from 'src/app/models/user';\nimport { passwordValidator } from 'src/app/validators/passwordValidator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AccountComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h6\", 12);\n    i0.ɵɵtext(2, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.loggedInUser.customer.custFirstName, \" \", ctx_r0.loggedInUser.customer.custLastName, \" \");\n  }\n}\n\nfunction AccountComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 6)(2, \"h6\");\n    i0.ɵɵtext(3, \"Account Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"h6\");\n    i0.ɵɵtext(8, \"Account Balance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 13);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"h6\");\n    i0.ɵɵtext(13, \"Account Created:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\", 13);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.loggedInUser.customer.bankAcc == null ? null : ctx_r1.loggedInUser.customer.bankAcc.accType);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"$\", ctx_r1.loggedInUser.customer.bankAcc == null ? null : ctx_r1.loggedInUser.customer.bankAcc.accBal, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.loggedInUser.customer.bankAcc == null ? null : ctx_r1.loggedInUser.customer.bankAcc.accCreationDate, \" \");\n  }\n}\n\nfunction AccountComponent_div_18_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"Password cannot be empty\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"At least 3 characters\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"Password must contain at least 1 special character, 1 number, 1 uppercase and 1 lower case\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"Password cannot be empty\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"At least 3 characters\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"Password must contain at least 1 special character, 1 number, 1 uppercase and 1 lower case\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"Password cannot be empty\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"p\", 31);\n    i0.ɵɵtext(2, \"At least 3 characters\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AccountComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h5\", 15);\n    i0.ɵɵtext(2, \"Change password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function AccountComponent_div_18_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 18)(7, \"label\", 19);\n    i0.ɵɵtext(8, \"Current Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 21);\n    i0.ɵɵtemplate(11, AccountComponent_div_18_div_11_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(12, AccountComponent_div_18_div_12_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 23);\n    i0.ɵɵtext(15, \"New Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 21);\n    i0.ɵɵtemplate(18, AccountComponent_div_18_div_18_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(19, AccountComponent_div_18_div_19_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(20, AccountComponent_div_18_div_20_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 6)(22, \"label\", 25);\n    i0.ɵɵtext(23, \"Repeat New Password: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\", 21);\n    i0.ɵɵtemplate(26, AccountComponent_div_18_div_26_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(27, AccountComponent_div_18_div_27_Template, 3, 0, \"div\", 22);\n    i0.ɵɵtemplate(28, AccountComponent_div_18_div_28_Template, 3, 0, \"div\", 22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 27)(30, \"button\", 28);\n    i0.ɵɵtext(31, \"Submit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AccountComponent_div_18_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.handleCancel());\n    });\n    i0.ɵɵtext(33, \"Cancel\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.changePasswordForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.oldPassword.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.oldPassword.hasError(\"minlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.newPassword.hasError(\"passwordValidator\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.newPassword.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.newPassword.hasError(\"minlength\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.repeatNewPassword.hasError(\"passwordValidator\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.repeatNewPassword.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.repeatNewPassword.hasError(\"minlength\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.changePasswordForm.invalid);\n  }\n}\n\nexport class AccountComponent {\n  constructor(apiService, formBuilder) {\n    this.apiService = apiService;\n    this.formBuilder = formBuilder;\n    this.changingPasswordState = false;\n    this.loggedInUser = new User();\n    this.changePasswordObj = {\n      username: '',\n      oldPassword: '',\n      newPassword: ''\n    };\n    this.changePasswordForm = this.formBuilder.group({\n      oldPassword: ['', Validators.required, Validators.minLength(3)],\n      newPassword: ['', [passwordValidator(), Validators.required, Validators.minLength(3)]],\n      repeatNewPassword: ['', [passwordValidator(), Validators.required, Validators.minLength(3)]]\n    });\n  }\n\n  get oldPassword() {\n    return this.changePasswordForm.controls.oldPassword;\n  }\n\n  get newPassword() {\n    return this.changePasswordForm.controls.newPassword;\n  }\n\n  get repeatNewPassword() {\n    return this.changePasswordForm.controls.repeatNewPassword;\n  }\n\n  onSubmit() {\n    if (this.newPassword.getRawValue() !== this.repeatNewPassword.getRawValue()) {\n      window.alert('New passwords does not match');\n    } else {\n      this.changePasswordObj.username = !!localStorage.getItem('username') ? localStorage.getItem('username') : '';\n      this.changePasswordObj.oldPassword = this.changePasswordForm.controls.oldPassword.getRawValue();\n      this.changePasswordObj.newPassword = this.changePasswordForm.controls.newPassword.getRawValue();\n      this.apiService.changePassword(this.changePasswordObj).subscribe({\n        next: res => {\n          console.log(res);\n          this.handleCancel();\n        },\n        error: err => {\n          if (err.status == 406) {\n            window.alert('Old password is incorrect');\n          } else if (err.status == 404) {\n            window.alert('Something went wrong with username');\n          }\n        }\n      });\n    }\n  }\n\n  handleCancel() {\n    this.changingPasswordState = !this.changingPasswordState;\n    this.changePasswordForm.reset();\n  }\n\n  ngOnInit() {\n    this.loadLoggedInUser();\n  }\n\n  loadLoggedInUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.loggedInUser = yield lastValueFrom(_this.apiService.getUserByUsername(localStorage.getItem('username')));\n      console.log(_this.loggedInUser);\n    })();\n  }\n\n}\n\nAccountComponent.ɵfac = function AccountComponent_Factory(t) {\n  return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\n\nAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountComponent,\n  selectors: [[\"app-account\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"d-flex\", \"flex-column\", \"align-items-center\"], [1, \"d-flex\", \"flex-column\", \"border\", \"w-75\"], [1, \"bg\", \"bg-dark\", \"text-white\", \"text-center\", \"py-2\"], [1, \"d-inline-flex\", \"justify-content-around\"], [1, \"d-flex\", \"flex-column\"], [\"class\", \"d-inline-flex align-items-baseline\", 4, \"ngIf\"], [1, \"d-inline-flex\", \"align-items-baseline\"], [1, \"\"], [1, \"ms-2\", \"mb-0\"], [1, \"rounded-pill\", \"ms-3\", \"mt-1\", \"mb-3\", 3, \"click\"], [\"class\", \"d-flex flex-column\", 4, \"ngIf\"], [\"class\", \"d-flex flex-column shadow m-4\", \"style\", \"width: 30%; border-radius: 16px;\", 4, \"ngIf\"], [1, \"mt-1\"], [1, \"ms-2\"], [1, \"d-flex\", \"flex-column\", \"shadow\", \"m-4\", 2, \"width\", \"30%\", \"border-radius\", \"16px\"], [1, \"bg\", \"bg-dark\", \"text-white\", \"text-center\", \"py-2\", 2, \"border-top-left-radius\", \"16px\", \"border-top-right-radius\", \"16px\"], [1, \"d-flex\", \"flex-column\", \"p-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"d-flex\", \"align-items-baseline\"], [\"for\", \"oldPassword\", 1, \"form-label\", \"text-nowrap\"], [\"formControlName\", \"oldPassword\", \"type\", \"password\", \"name\", \"oldPassword\", \"id\", \"oldPassword\", 1, \"form-control\", \"ms-3\", \"p-0\", 2, \"width\", \"40%\"], [1, \"d-flex\", \"m-1\"], [\"class\", \"alert alert-danger p-1\", 4, \"ngIf\"], [\"for\", \"newPassword\", 1, \"form-label\", \"text-nowrap\"], [\"formControlName\", \"newPassword\", \"type\", \"password\", \"name\", \"newPassword\", \"id\", \"newPassword\", 1, \"form-control\", \"ms-3\", \"p-0\", 2, \"width\", \"40%\"], [\"for\", \"repeatNewPassword\", 1, \"form-label\", \"text-nowrap\"], [\"formControlName\", \"repeatNewPassword\", \"type\", \"password\", \"name\", \"repeatNewPassword\", \"id\", \"repeatNewPassword\", 1, \"form-control\", \"ms-3\", \"p-0\", 2, \"width\", \"40%\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"rounded-pill\", 3, \"disabled\"], [1, \"ms-3\", \"rounded-pill\", 3, \"click\"], [1, \"alert\", \"alert-danger\", \"p-1\"], [1, \"m-0\"]],\n  template: function AccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n      i0.ɵɵtext(3, \"Account Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵtemplate(6, AccountComponent_div_6_Template, 5, 2, \"div\", 5);\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"h6\", 7);\n      i0.ɵɵtext(9, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\", 8);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 6)(13, \"h6\", 7);\n      i0.ɵɵtext(14, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AccountComponent_Template_button_click_15_listener() {\n        return ctx.changingPasswordState = !ctx.changingPasswordState;\n      });\n      i0.ɵɵtext(16, \"Change password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(17, AccountComponent_div_17_Template, 16, 3, \"div\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, AccountComponent_div_18_Template, 34, 10, \"div\", 11);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loggedInUser.customer);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.loggedInUser.username);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.loggedInUser.customer);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.changingPasswordState);\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2NvdW50LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","lastValueFrom","User","passwordValidator","i0","AccountComponent","constructor","apiService","formBuilder","username","oldPassword","newPassword","group","required","minLength","repeatNewPassword","changePasswordForm","controls","onSubmit","getRawValue","window","alert","changePasswordObj","localStorage","getItem","changePassword","subscribe","next","res","console","log","handleCancel","error","err","status","changingPasswordState","reset","ngOnInit","loadLoggedInUser","loggedInUser","getUserByUsername","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/audrian/Documents/Programming/GitHub/banking-app-angular/src/app/pages/account/account.component.ts","/Users/audrian/Documents/Programming/GitHub/banking-app-angular/src/app/pages/account/account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { catchError, lastValueFrom, pipe, tap } from 'rxjs';\nimport { changePasswordModel } from 'src/app/models/changePassword.model';\nimport { User } from 'src/app/models/user';\nimport { ApiService } from 'src/app/service/api.service';\nimport { passwordValidator } from 'src/app/validators/passwordValidator';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css'],\n})\nexport class AccountComponent implements OnInit {\n  changingPasswordState: boolean = false;\n\n  loggedInUser: User = new User();\n  changePasswordObj?: changePasswordModel = {\n    username: '',\n    oldPassword: '',\n    newPassword: '',\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  changePasswordForm = this.formBuilder.group({\n    oldPassword: ['', Validators.required, Validators.minLength(3)],\n    newPassword: ['', [passwordValidator(), Validators.required, Validators.minLength(3)]],\n    repeatNewPassword: ['', [passwordValidator(), Validators.required, Validators.minLength(3)]],\n  });\n\n  get oldPassword() {\n    return this.changePasswordForm.controls.oldPassword\n  }\n\n  get newPassword() {\n    return this.changePasswordForm.controls.newPassword;\n  }\n\n  get repeatNewPassword() {\n    return this.changePasswordForm.controls.repeatNewPassword;\n  }\n\n  onSubmit() {\n    if (\n      this.newPassword.getRawValue() !== this.repeatNewPassword.getRawValue()\n    ) {\n      window.alert('New passwords does not match');\n    } else {\n      this.changePasswordObj!.username = !!localStorage.getItem('username')\n        ? localStorage.getItem('username')\n        : '';\n      this.changePasswordObj!.oldPassword =\n        this.changePasswordForm.controls.oldPassword.getRawValue();\n      this.changePasswordObj!.newPassword =\n        this.changePasswordForm.controls.newPassword.getRawValue();\n      this.apiService\n        .changePassword(this.changePasswordObj).subscribe({\n          next: (res) => {\n            console.log(res)\n            this.handleCancel()\n          },\n          error: (err) => {\n            if (err.status == 406) {\n              window.alert('Old password is incorrect');\n            } else if (err.status == 404) {\n              window.alert('Something went wrong with username');\n            }\n          }\n        })\n    }\n  }\n\n  handleCancel() {\n    this.changingPasswordState = !this.changingPasswordState;\n    this.changePasswordForm.reset();\n  }\n\n  ngOnInit(): void {\n    this.loadLoggedInUser();\n  }\n\n  async loadLoggedInUser() {\n    this.loggedInUser = (await lastValueFrom(\n      this.apiService.getUserByUsername(localStorage.getItem('username'))\n    )) as User;\n    console.log(this.loggedInUser);\n  }\n}\n","<div class=\"d-flex flex-column align-items-center\">\n  <div class=\"d-flex flex-column border w-75\">\n    <h5 class=\"bg bg-dark text-white text-center py-2\">Account Details</h5>\n    <div class=\"d-inline-flex justify-content-around\">\n      <div class=\"d-flex flex-column\">\n        <div *ngIf=\"loggedInUser.customer\" class=\"d-inline-flex align-items-baseline\">\n          <h6 class=\"mt-1\">Name:</h6>\n          <p class=\"ms-2\">\n            {{ loggedInUser.customer.custFirstName }}\n            {{ loggedInUser.customer.custLastName }}\n          </p>\n        </div>\n        <div class=\"d-inline-flex align-items-baseline\">\n          <h6 class=\"\">Username:</h6>\n          <p class=\"ms-2 mb-0\">{{ loggedInUser.username }}</p>\n        </div>\n        <!-- <div>\n          <button class=\"rounded-pill mb-2\">Change username</button>\n        </div> -->\n        <div class=\"d-inline-flex align-items-baseline\">\n          <h6 class=\"\">Password:</h6>\n          <button class=\"rounded-pill ms-3 mt-1 mb-3\" (click)=\"changingPasswordState = !changingPasswordState\">Change password</button>\n        </div>\n      </div>\n\n      <!-- separator of left and right columns -->\n\n      <div *ngIf=\"loggedInUser.customer\" class=\"d-flex flex-column\">\n        <div class=\"d-inline-flex align-items-baseline\">\n          <h6>Account Type:</h6>\n          <p class=\"ms-2\">{{ loggedInUser.customer.bankAcc?.accType }}</p>\n        </div>\n        <div class=\"d-inline-flex align-items-baseline\">\n          <h6>Account Balance:</h6>\n          <p class=\"ms-2\">${{ loggedInUser.customer.bankAcc?.accBal }}</p>\n        </div>\n        <div class=\"d-inline-flex align-items-baseline\">\n          <h6>Account Created:</h6>\n          <p class=\"ms-2\">\n            {{ loggedInUser.customer.bankAcc?.accCreationDate }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"changingPasswordState\" class=\"d-flex flex-column shadow m-4\" style=\"width: 30%; border-radius: 16px;\">\n    <h5 class=\"bg bg-dark text-white text-center py-2\" style=\"border-top-left-radius: 16px; border-top-right-radius: 16px;\">Change password</h5>\n    <div class=\"d-flex flex-column p-3 \">\n      <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\" >\n        <div class=\"d-flex flex-column\">\n        <div class=\"d-flex align-items-baseline\">\n          <label class=\"form-label text-nowrap\" for=\"oldPassword\"\n            >Current Password:\n          </label>\n          <input\n            formControlName=\"oldPassword\"\n            class=\"form-control ms-3 p-0\"\n            style=\"width: 40%;\"\n            type=\"password\"\n            name=\"oldPassword\"\n            id=\"oldPassword\"\n          />\n        </div>\n        <div class=\"d-flex m-1\">\n          <div *ngIf=\"oldPassword.hasError('required')\" class=\"alert alert-danger p-1\">\n              <p class=\"m-0\">Password cannot be empty</p>\n          </div>\n          <div *ngIf=\"oldPassword.hasError('minlength')\" class=\"alert alert-danger p-1\">\n            <p class=\"m-0\">At least 3 characters</p>\n        </div>\n      </div>\n        <div class=\"d-inline-flex align-items-baseline\">\n          <label class=\"form-label text-nowrap\" for=\"newPassword\"\n            >New Password:\n          </label>\n          <input\n            formControlName=\"newPassword\"\n            class=\"form-control ms-3 p-0\"\n            style=\"width: 40%;\"\n            type=\"password\"\n            name=\"newPassword\"\n            id=\"newPassword\"\n          />\n        </div>\n\n        <div class=\"d-flex m-1\">\n            <div *ngIf=\"newPassword.hasError('passwordValidator')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">Password must contain at least 1 special character, 1 number, 1 uppercase and 1 lower case</p>\n            </div>\n            <div *ngIf=\"newPassword.hasError('required')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">Password cannot be empty</p>\n            </div>\n            <div *ngIf=\"newPassword.hasError('minlength')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">At least 3 characters</p>\n            </div>\n        </div>\n\n        <div class=\"d-inline-flex align-items-baseline\">\n          <label class=\"form-label text-nowrap\" for=\"repeatNewPassword\"\n            >Repeat New Password:\n          </label>\n          <input\n            formControlName=\"repeatNewPassword\"\n            class=\"form-control ms-3 p-0\"\n            style=\"width: 40%;\"\n            type=\"password\"\n            name=\"repeatNewPassword\"\n            id=\"repeatNewPassword\"\n          />\n        </div>\n\n        <div class=\"d-flex m-1\">\n            <div *ngIf=\"repeatNewPassword.hasError('passwordValidator')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">Password must contain at least 1 special character, 1 number, 1 uppercase and 1 lower case</p>\n            </div>\n            <div *ngIf=\"repeatNewPassword.hasError('required')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">Password cannot be empty</p>\n            </div>\n            <div *ngIf=\"repeatNewPassword.hasError('minlength')\" class=\"alert alert-danger p-1\">\n                <p class=\"m-0\">At least 3 characters</p>\n            </div>\n        </div>\n\n    </div>\n    <div class=\"d-flex justify-content-center\">\n    <button class=\"rounded-pill\" type=\"submit\" [disabled]=\"changePasswordForm.invalid\">Submit</button>\n    <button class=\"ms-3 rounded-pill\" (click)=\"handleCancel()\">Cancel</button>\n    </div>\n        </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}